## GitHub Actions Workflow - Cutover
# This GitHub Actions workflow is responsible for performing a manual cutover to a live environment for production.

# Secrets according the environment:
# - AWS_ACCESS_KEY_ID: Access key for AWS authentication
# - AWS_SECRET_ACCESS_KEY: Secret key for AWS authentication

name: Production Cutover Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: 'dev'
      ecs_cluster_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      AWS_ROLE_ARN:
        required: true

# Define environment variables used in the workflow.
env:
  ENVIRONMENT: ${{ inputs.environment }}
  AWS_REGION: us-east-1
  APP_PREFIX: webapp-color-${{ inputs.environment }}
  SSM_ACTIVE_COLOR_PARAMETER_NAME: /kcdcolombia/webapp-color/${{ inputs.environment }}/active_color
  SSM_DOCKER_TAG_PARAMETER_NAME: /kcdcolombia/webapp-color/${{ inputs.environment }}/docker_tag
  SSM_LIVE_SERVICE_MINIMUM_TASKS_PARAMETER_NAME: /kcdcolombia/webapp-color/${{ inputs.environment }}/live_service_minimum_tasks
  ECS_CLUSTER_NAME: ${{ inputs.ecs_cluster_name }}
  ACTIVE_HOST: ecs.gitops.club
  INACTIVE_HOST: preview.ecs.gitops.club
  INACTIVE_TASK_DESIRED_COUNT: 0

jobs:
  cutover:
    name: Cutover-${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Quick healthcheck for the new active service
        env:
          URL: https://${{ env.INACTIVE_HOST }}/
        run: |
          ./.github/scripts/website_healthcheck.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # https://github.com/aws-actions/configure-aws-credentials
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: WebAppColorDeployment
          audience: sts.amazonaws.com

      - name: Get live color from SSM
        run: |
          ./.github/scripts/set_active_inactive_colors.sh

      - name: Stabilize the tasks in the new active service
        env:
          CURRENT_ACTIVE_SERVICE_NAME: ${{ env.APP_PREFIX }}-${{ env.ACTIVE_COLOR }}
          NEW_ACTIVE_SERVICE_NAME: ${{ env.APP_PREFIX }}-${{ env.INACTIVE_COLOR }}
        run:
          ./.github/scripts/service_stabilize.sh

      - name: Do the cutover
        env:
          LOAD_BALANCER_NAME: melee-${{ env.ENVIRONMENT }}-lb
          BLUE_TARGET_GROUP_NAME: ${{ env.APP_PREFIX }}-blue
          GREEN_TARGET_GROUP_NAME: ${{ env.APP_PREFIX }}-green
        run:
          ./.github/scripts/cutover.sh

      - name: Get Image Tag
        env:
          ECS_SERVICE_NAME: ${{ env.APP_PREFIX }}-${{ env.INACTIVE_COLOR }}
        run:
          ./.github/scripts/get_service_image_tag.sh

      - name: Scale down the old service
        env:
          CURRENT_ACTIVE_SERVICE_NAME: ${{ env.APP_PREFIX }}-${{ env.ACTIVE_COLOR }}
        run:
          ./.github/scripts/service_scale_down.sh

      - name: Update the active color in SSM
        env:
          NEW_ACTIVE_COLOR: ${{ env.INACTIVE_COLOR }}
        run:
          ./.github/scripts/ssm_update_parameters.sh
